// <auto-generated />
using System;
using Clash.DataBase.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Clash.DataBase.Migrations.Clan
{
    [DbContext(typeof(ClanContext))]
    [Migration("20190213191642_ClanCxt")]
    partial class ClanCxt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Clash.Domain.Entities.API.BadgeUrls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Large");

                    b.Property<string>("Medium");

                    b.Property<string>("Small");

                    b.HasKey("Id");

                    b.ToTable("BadgeUrls");
                });

            modelBuilder.Entity("Clash.Domain.Entities.API.Clan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CLAN")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BadgeUrlsId");

                    b.Property<int>("ClanLevel")
                        .HasColumnName("CLAN_LEVEL");

                    b.Property<long>("ClanPoint")
                        .HasColumnName("CLAN_PONTOS");

                    b.Property<long>("ClanVersusPoints")
                        .HasColumnName("CLAN_VERSUS_POINTS");

                    b.Property<string>("Description")
                        .HasColumnName("CLAN_DESCRICAO");

                    b.Property<bool>("IsWarLogPublic")
                        .HasColumnName("CLAN_WAR_LOG");

                    b.Property<int?>("LocationId");

                    b.Property<int>("Members")
                        .HasColumnName("CLAN_QNTD_MEMBERS");

                    b.Property<string>("Name")
                        .HasColumnName("CLAN_NOME");

                    b.Property<int>("RequiredTrophies")
                        .HasColumnName("CLAN_TROFEUS_NECESSARIOS");

                    b.Property<string>("Tag")
                        .HasColumnName("CLAN_TAG");

                    b.Property<string>("Type")
                        .HasColumnName("CLAN_TYPE");

                    b.Property<string>("WarFrequency")
                        .HasColumnName("CLAN_FREQUENCIA_WAR");

                    b.Property<int>("WarWinStreak")
                        .HasColumnName("CLAN_WAR_STREAK");

                    b.Property<int>("WarWins")
                        .HasColumnName("CLAN_WAR_WINS");

                    b.HasKey("Id");

                    b.HasIndex("BadgeUrlsId");

                    b.HasIndex("LocationId");

                    b.ToTable("Clan");
                });

            modelBuilder.Entity("Clash.Domain.Entities.API.IconUrls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Medium");

                    b.Property<string>("Small");

                    b.Property<string>("Tiny");

                    b.HasKey("Id");

                    b.ToTable("IconUrls");
                });

            modelBuilder.Entity("Clash.Domain.Entities.API.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IconUrlsId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("IconUrlsId");

                    b.ToTable("League");
                });

            modelBuilder.Entity("Clash.Domain.Entities.API.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode");

                    b.Property<bool>("IsCountry");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Clash.Domain.Entities.API.MemberList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClanId");

                    b.Property<int>("ClanRank");

                    b.Property<int>("Donation");

                    b.Property<int>("DonationsReceived");

                    b.Property<int>("ExpLevel");

                    b.Property<int?>("LeagueId");

                    b.Property<string>("Name");

                    b.Property<int>("PreviousClanRank");

                    b.Property<string>("Role");

                    b.Property<string>("Tag");

                    b.Property<int>("Trophies");

                    b.Property<int>("VersusTrophies");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.HasIndex("LeagueId");

                    b.ToTable("MemberList");
                });

            modelBuilder.Entity("Clash.Domain.Entities.API.Clan", b =>
                {
                    b.HasOne("Clash.Domain.Entities.API.BadgeUrls", "BadgeUrls")
                        .WithMany()
                        .HasForeignKey("BadgeUrlsId");

                    b.HasOne("Clash.Domain.Entities.API.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("Clash.Domain.Entities.API.League", b =>
                {
                    b.HasOne("Clash.Domain.Entities.API.IconUrls", "IconUrls")
                        .WithMany()
                        .HasForeignKey("IconUrlsId");
                });

            modelBuilder.Entity("Clash.Domain.Entities.API.MemberList", b =>
                {
                    b.HasOne("Clash.Domain.Entities.API.Clan")
                        .WithMany("MemberList")
                        .HasForeignKey("ClanId");

                    b.HasOne("Clash.Domain.Entities.API.League", "League")
                        .WithMany()
                        .HasForeignKey("LeagueId");
                });
#pragma warning restore 612, 618
        }
    }
}
